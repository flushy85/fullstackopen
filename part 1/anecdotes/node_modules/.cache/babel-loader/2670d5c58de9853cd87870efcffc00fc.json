{"ast":null,"code":"var _jsxFileName = \"/home/flushy/Development/fullstack-open/part 1/anecdotes/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, text), \" \", /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 23\n    }\n  }, value));\n};\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral,\n  average,\n  positive,\n  all\n}) => {\n  if (all === 0) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"No Feedback Given\");\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    text: \"Good\",\n    value: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"Neutral\",\n    value: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"Bad\",\n    value: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"All\",\n    value: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"Average\",\n    value: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"Positive\",\n    value: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const total = good + bad + neutral;\n  const average = (good - bad) / total;\n  const positive = 100 / (total / good) + ' %';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"Neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    positive: positive,\n    average: average,\n    all: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/flushy/Development/fullstack-open/part 1/anecdotes/src/index.js"],"names":["React","useState","ReactDOM","Statistic","text","value","Statistics","good","bad","neutral","average","positive","all","Button","onClick","App","setGood","setNeutral","setBad","handleGoodClick","handleBadClick","handleNeutralClick","total","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistic = ({text, value}) => {\n  return (\n    <tr>\n      <td>{text}</td> <td>{value}</td>\n    </tr>\n  )\n}\n\n\nconst Statistics = ({good, bad, neutral, average, positive, all}) => {\n  if(all === 0)\n    return (\n      <div>\n        No Feedback Given\n      </div>\n    )\n  \n  return (\n    <table>\n     <Statistic text=\"Good\" value={good} />\n      <Statistic text=\"Neutral\" value={neutral} />\n      <Statistic text=\"Bad\" value={bad} />\n      <Statistic text=\"All\" value={all} />\n      <Statistic text=\"Average\" value={average} />\n      <Statistic text=\"Positive\" value={positive} />\n    </table>\n  )\n}\n\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const total = good + bad + neutral\n  const average = (good - bad) / total \n  const positive = 100 / (total / good) + ' %'\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button onClick={handleGoodClick} text='Good'/>\n      <Button onClick={handleNeutralClick} text='Neutral'/>\n      <Button onClick={handleBadClick} text='Bad'/>\n      <br/>\n      <h1>Statistics</h1>\n      <Statistics \n        good={good}\n        bad={bad}\n        neutral={neutral}\n        positive={positive}\n        average={average}\n        all={total} \n      />\n      \n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}